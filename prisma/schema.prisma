// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  FULFILLED
  CANCELLED
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  passwordHash  String
  role          UserRole
  userImage     String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  orders        Order[]
  cart          Cart?
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Order {
  id            Int         @id @default(autoincrement())
  userId        Int
  status        OrderStatus
  totalAmount   Decimal
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  user          User        @relation(fields: [userId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id          Int       @id @default(autoincrement())
  orderId     Int
  productId   Int
  quantity    Int
  price       Decimal

  order       Order     @relation(fields: [orderId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
}

model Cart {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id])
  cartItems   CartItem[]
}

model CartItem {
  id          Int       @id @default(autoincrement())
  cartId      Int
  productId   Int
  quantity    Int

  cart        Cart      @relation(fields: [cartId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
}